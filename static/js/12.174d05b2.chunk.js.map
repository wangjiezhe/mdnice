{"version":3,"sources":["../node_modules/codemirror/mode/python/python.js","../node_modules/codemirror/mode/stex/stex.js","../node_modules/codemirror/mode/rst/rst.js","../node_modules/codemirror/addon/mode/overlay.js"],"names":["CodeMirror","wordRegexp","words","RegExp","join","str","wordOperators","commonKeywords","commonBuiltins","top","state","scopes","length","registerHelper","concat","defineMode","conf","parserConf","ERRORCLASS","delimiters","singleDelimiters","operators","singleOperators","doubleOperators","doubleDelimiters","tripleDelimiters","i","splice","hangingIndent","indentUnit","myKeywords","myBuiltins","undefined","extra_keywords","extra_builtins","py3","version","Number","identifiers","stringPrefixes","keywords","builtins","tokenBase","stream","sol","lastToken","indent","indentation","type","scopeOffset","offset","eatSpace","lineOffset","pushPyScope","dedent","peek","errorToken","style","tokenBaseInner","match","floatLiteral","eat","intLiteral","current","toLowerCase","indexOf","tokenize","delimiter","tokenOuter","charAt","substr","singleline","OUTCLASS","tokenNestedExpr","depth","inner","tokenString","eol","eatWhile","next","singleLineStringErrors","isString","formatStringFactory","tokenStringFactory","pop","push","align","indented","tokenLexer","beginningOfLine","test","lambda","delimiter_index","column","pushBracketScope","slice","startState","basecolumn","token","addErr","textAfter","Pass","scope","closing","electricInput","closeBrackets","triples","lineComment","fold","defineMIME","name","split","mod","_config","parserConfig","pushCommand","command","cmdState","peekCommand","addPluginPattern","pluginName","cmdStyle","styles","this","bracketNo","argument","styleIdentifier","openBracket","closeBracket","plugins","setState","f","normal","source","plug","cmdName","beginParams","inMathMode","ch","skipToEnd","context","getMostPowerful","endModeSeq","popCommand","copyState","s","blankLine","config","options","rx_strong","rx_emphasis","rx_literal","rx_number","rx_positive","rx_negative","rx_uri","overlay","mode","getMode","backdrop","overlayMode","format","string","args","Array","prototype","call","arguments","replace","n","mode_python","mode_stex","TAIL","rx_TAIL","NAME","rx_NAME","REF_NAME","TEXT1","TEXT2","rx_TEXT2","rx_section","rx_explicit","rx_link","rx_directive","rx_substitution","rx_footnote","rx_citation","rx_substitution_ref","rx_footnote_ref","rx_citation_ref","rx_link_ref1","rx_link_ref2","rx_role_pre","rx_role_suf","rx_role","rx_directive_name","rx_directive_tail","rx_substitution_text","rx_substitution_sepa","rx_substitution_name","rx_substitution_tail","rx_link_head","rx_link_name","rx_link_tail","rx_verbatim","rx_examples","to_normal","change","to_mode","local","to_explicit","phase","stage","tmp_stex","tmp","to_verbatim","tmp_py","to_comment","as_block","ctx","tok","innerMode","base","combine","basePos","baseCur","overlayPos","overlayCur","streamSeen","Math","min","start","pos","combineTokens","line","electricChars","baseToken","overlayToken"],"mappings":"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","file":"static/js/12.174d05b2.chunk.js","sourcesContent":["// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: https://codemirror.net/LICENSE\n(function (mod) {\n  if (typeof exports == \"object\" && typeof module == \"object\") // CommonJS\n    mod(require(\"../../lib/codemirror\"));else if (typeof define == \"function\" && define.amd) // AMD\n    define([\"../../lib/codemirror\"], mod);else // Plain browser env\n    mod(CodeMirror);\n})(function (CodeMirror) {\n  \"use strict\";\n\n  function wordRegexp(words) {\n    return new RegExp(\"^((\" + words.join(\")|(\") + \"))\\\\b\");\n  }\n\n  var wordOperators = wordRegexp([\"and\", \"or\", \"not\", \"is\"]);\n  var commonKeywords = [\"as\", \"assert\", \"break\", \"class\", \"continue\", \"def\", \"del\", \"elif\", \"else\", \"except\", \"finally\", \"for\", \"from\", \"global\", \"if\", \"import\", \"lambda\", \"pass\", \"raise\", \"return\", \"try\", \"while\", \"with\", \"yield\", \"in\"];\n  var commonBuiltins = [\"abs\", \"all\", \"any\", \"bin\", \"bool\", \"bytearray\", \"callable\", \"chr\", \"classmethod\", \"compile\", \"complex\", \"delattr\", \"dict\", \"dir\", \"divmod\", \"enumerate\", \"eval\", \"filter\", \"float\", \"format\", \"frozenset\", \"getattr\", \"globals\", \"hasattr\", \"hash\", \"help\", \"hex\", \"id\", \"input\", \"int\", \"isinstance\", \"issubclass\", \"iter\", \"len\", \"list\", \"locals\", \"map\", \"max\", \"memoryview\", \"min\", \"next\", \"object\", \"oct\", \"open\", \"ord\", \"pow\", \"property\", \"range\", \"repr\", \"reversed\", \"round\", \"set\", \"setattr\", \"slice\", \"sorted\", \"staticmethod\", \"str\", \"sum\", \"super\", \"tuple\", \"type\", \"vars\", \"zip\", \"__import__\", \"NotImplemented\", \"Ellipsis\", \"__debug__\"];\n  CodeMirror.registerHelper(\"hintWords\", \"python\", commonKeywords.concat(commonBuiltins));\n\n  function top(state) {\n    return state.scopes[state.scopes.length - 1];\n  }\n\n  CodeMirror.defineMode(\"python\", function (conf, parserConf) {\n    var ERRORCLASS = \"error\";\n    var delimiters = parserConf.delimiters || parserConf.singleDelimiters || /^[\\(\\)\\[\\]\\{\\}@,:`=;\\.\\\\]/; //               (Backwards-compatiblity with old, cumbersome config system)\n\n    var operators = [parserConf.singleOperators, parserConf.doubleOperators, parserConf.doubleDelimiters, parserConf.tripleDelimiters, parserConf.operators || /^([-+*/%\\/&|^]=?|[<>=]+|\\/\\/=?|\\*\\*=?|!=|[~!@]|\\.\\.\\.)/];\n\n    for (var i = 0; i < operators.length; i++) {\n      if (!operators[i]) operators.splice(i--, 1);\n    }\n\n    var hangingIndent = parserConf.hangingIndent || conf.indentUnit;\n    var myKeywords = commonKeywords,\n        myBuiltins = commonBuiltins;\n    if (parserConf.extra_keywords != undefined) myKeywords = myKeywords.concat(parserConf.extra_keywords);\n    if (parserConf.extra_builtins != undefined) myBuiltins = myBuiltins.concat(parserConf.extra_builtins);\n    var py3 = !(parserConf.version && Number(parserConf.version) < 3);\n\n    if (py3) {\n      // since http://legacy.python.org/dev/peps/pep-0465/ @ is also an operator\n      var identifiers = parserConf.identifiers || /^[_A-Za-z\\u00A1-\\uFFFF][_A-Za-z0-9\\u00A1-\\uFFFF]*/;\n      myKeywords = myKeywords.concat([\"nonlocal\", \"False\", \"True\", \"None\", \"async\", \"await\"]);\n      myBuiltins = myBuiltins.concat([\"ascii\", \"bytes\", \"exec\", \"print\"]);\n      var stringPrefixes = new RegExp(\"^(([rbuf]|(br)|(fr))?('{3}|\\\"{3}|['\\\"]))\", \"i\");\n    } else {\n      var identifiers = parserConf.identifiers || /^[_A-Za-z][_A-Za-z0-9]*/;\n      myKeywords = myKeywords.concat([\"exec\", \"print\"]);\n      myBuiltins = myBuiltins.concat([\"apply\", \"basestring\", \"buffer\", \"cmp\", \"coerce\", \"execfile\", \"file\", \"intern\", \"long\", \"raw_input\", \"reduce\", \"reload\", \"unichr\", \"unicode\", \"xrange\", \"False\", \"True\", \"None\"]);\n      var stringPrefixes = new RegExp(\"^(([rubf]|(ur)|(br))?('{3}|\\\"{3}|['\\\"]))\", \"i\");\n    }\n\n    var keywords = wordRegexp(myKeywords);\n    var builtins = wordRegexp(myBuiltins); // tokenizers\n\n    function tokenBase(stream, state) {\n      var sol = stream.sol() && state.lastToken != \"\\\\\";\n      if (sol) state.indent = stream.indentation(); // Handle scope changes\n\n      if (sol && top(state).type == \"py\") {\n        var scopeOffset = top(state).offset;\n\n        if (stream.eatSpace()) {\n          var lineOffset = stream.indentation();\n          if (lineOffset > scopeOffset) pushPyScope(state);else if (lineOffset < scopeOffset && dedent(stream, state) && stream.peek() != \"#\") state.errorToken = true;\n          return null;\n        } else {\n          var style = tokenBaseInner(stream, state);\n          if (scopeOffset > 0 && dedent(stream, state)) style += \" \" + ERRORCLASS;\n          return style;\n        }\n      }\n\n      return tokenBaseInner(stream, state);\n    }\n\n    function tokenBaseInner(stream, state) {\n      if (stream.eatSpace()) return null; // Handle Comments\n\n      if (stream.match(/^#.*/)) return \"comment\"; // Handle Number Literals\n\n      if (stream.match(/^[0-9\\.]/, false)) {\n        var floatLiteral = false; // Floats\n\n        if (stream.match(/^[\\d_]*\\.\\d+(e[\\+\\-]?\\d+)?/i)) {\n          floatLiteral = true;\n        }\n\n        if (stream.match(/^[\\d_]+\\.\\d*/)) {\n          floatLiteral = true;\n        }\n\n        if (stream.match(/^\\.\\d+/)) {\n          floatLiteral = true;\n        }\n\n        if (floatLiteral) {\n          // Float literals may be \"imaginary\"\n          stream.eat(/J/i);\n          return \"number\";\n        } // Integers\n\n\n        var intLiteral = false; // Hex\n\n        if (stream.match(/^0x[0-9a-f_]+/i)) intLiteral = true; // Binary\n\n        if (stream.match(/^0b[01_]+/i)) intLiteral = true; // Octal\n\n        if (stream.match(/^0o[0-7_]+/i)) intLiteral = true; // Decimal\n\n        if (stream.match(/^[1-9][\\d_]*(e[\\+\\-]?[\\d_]+)?/)) {\n          // Decimal literals may be \"imaginary\"\n          stream.eat(/J/i); // TODO - Can you have imaginary longs?\n\n          intLiteral = true;\n        } // Zero by itself with no other piece of number.\n\n\n        if (stream.match(/^0(?![\\dx])/i)) intLiteral = true;\n\n        if (intLiteral) {\n          // Integer literals may be \"long\"\n          stream.eat(/L/i);\n          return \"number\";\n        }\n      } // Handle Strings\n\n\n      if (stream.match(stringPrefixes)) {\n        var isFmtString = stream.current().toLowerCase().indexOf('f') !== -1;\n\n        if (!isFmtString) {\n          state.tokenize = tokenStringFactory(stream.current(), state.tokenize);\n          return state.tokenize(stream, state);\n        } else {\n          state.tokenize = formatStringFactory(stream.current(), state.tokenize);\n          return state.tokenize(stream, state);\n        }\n      }\n\n      for (var i = 0; i < operators.length; i++) {\n        if (stream.match(operators[i])) return \"operator\";\n      }\n\n      if (stream.match(delimiters)) return \"punctuation\";\n      if (state.lastToken == \".\" && stream.match(identifiers)) return \"property\";\n      if (stream.match(keywords) || stream.match(wordOperators)) return \"keyword\";\n      if (stream.match(builtins)) return \"builtin\";\n      if (stream.match(/^(self|cls)\\b/)) return \"variable-2\";\n\n      if (stream.match(identifiers)) {\n        if (state.lastToken == \"def\" || state.lastToken == \"class\") return \"def\";\n        return \"variable\";\n      } // Handle non-detected items\n\n\n      stream.next();\n      return ERRORCLASS;\n    }\n\n    function formatStringFactory(delimiter, tokenOuter) {\n      while (\"rubf\".indexOf(delimiter.charAt(0).toLowerCase()) >= 0) {\n        delimiter = delimiter.substr(1);\n      }\n\n      var singleline = delimiter.length == 1;\n      var OUTCLASS = \"string\";\n\n      function tokenNestedExpr(depth) {\n        return function (stream, state) {\n          var inner = tokenBaseInner(stream, state);\n\n          if (inner == \"punctuation\") {\n            if (stream.current() == \"{\") {\n              state.tokenize = tokenNestedExpr(depth + 1);\n            } else if (stream.current() == \"}\") {\n              if (depth > 1) state.tokenize = tokenNestedExpr(depth - 1);else state.tokenize = tokenString;\n            }\n          }\n\n          return inner;\n        };\n      }\n\n      function tokenString(stream, state) {\n        while (!stream.eol()) {\n          stream.eatWhile(/[^'\"\\{\\}\\\\]/);\n\n          if (stream.eat(\"\\\\\")) {\n            stream.next();\n            if (singleline && stream.eol()) return OUTCLASS;\n          } else if (stream.match(delimiter)) {\n            state.tokenize = tokenOuter;\n            return OUTCLASS;\n          } else if (stream.match('{{')) {\n            // ignore {{ in f-str\n            return OUTCLASS;\n          } else if (stream.match('{', false)) {\n            // switch to nested mode\n            state.tokenize = tokenNestedExpr(0);\n            if (stream.current()) return OUTCLASS;else return state.tokenize(stream, state);\n          } else if (stream.match('}}')) {\n            return OUTCLASS;\n          } else if (stream.match('}')) {\n            // single } in f-string is an error\n            return ERRORCLASS;\n          } else {\n            stream.eat(/['\"]/);\n          }\n        }\n\n        if (singleline) {\n          if (parserConf.singleLineStringErrors) return ERRORCLASS;else state.tokenize = tokenOuter;\n        }\n\n        return OUTCLASS;\n      }\n\n      tokenString.isString = true;\n      return tokenString;\n    }\n\n    function tokenStringFactory(delimiter, tokenOuter) {\n      while (\"rubf\".indexOf(delimiter.charAt(0).toLowerCase()) >= 0) {\n        delimiter = delimiter.substr(1);\n      }\n\n      var singleline = delimiter.length == 1;\n      var OUTCLASS = \"string\";\n\n      function tokenString(stream, state) {\n        while (!stream.eol()) {\n          stream.eatWhile(/[^'\"\\\\]/);\n\n          if (stream.eat(\"\\\\\")) {\n            stream.next();\n            if (singleline && stream.eol()) return OUTCLASS;\n          } else if (stream.match(delimiter)) {\n            state.tokenize = tokenOuter;\n            return OUTCLASS;\n          } else {\n            stream.eat(/['\"]/);\n          }\n        }\n\n        if (singleline) {\n          if (parserConf.singleLineStringErrors) return ERRORCLASS;else state.tokenize = tokenOuter;\n        }\n\n        return OUTCLASS;\n      }\n\n      tokenString.isString = true;\n      return tokenString;\n    }\n\n    function pushPyScope(state) {\n      while (top(state).type != \"py\") {\n        state.scopes.pop();\n      }\n\n      state.scopes.push({\n        offset: top(state).offset + conf.indentUnit,\n        type: \"py\",\n        align: null\n      });\n    }\n\n    function pushBracketScope(stream, state, type) {\n      var align = stream.match(/^([\\s\\[\\{\\(]|#.*)*$/, false) ? null : stream.column() + 1;\n      state.scopes.push({\n        offset: state.indent + hangingIndent,\n        type: type,\n        align: align\n      });\n    }\n\n    function dedent(stream, state) {\n      var indented = stream.indentation();\n\n      while (state.scopes.length > 1 && top(state).offset > indented) {\n        if (top(state).type != \"py\") return true;\n        state.scopes.pop();\n      }\n\n      return top(state).offset != indented;\n    }\n\n    function tokenLexer(stream, state) {\n      if (stream.sol()) state.beginningOfLine = true;\n      var style = state.tokenize(stream, state);\n      var current = stream.current(); // Handle decorators\n\n      if (state.beginningOfLine && current == \"@\") return stream.match(identifiers, false) ? \"meta\" : py3 ? \"operator\" : ERRORCLASS;\n      if (/\\S/.test(current)) state.beginningOfLine = false;\n      if ((style == \"variable\" || style == \"builtin\") && state.lastToken == \"meta\") style = \"meta\"; // Handle scope changes.\n\n      if (current == \"pass\" || current == \"return\") state.dedent += 1;\n      if (current == \"lambda\") state.lambda = true;\n      if (current == \":\" && !state.lambda && top(state).type == \"py\") pushPyScope(state);\n\n      if (current.length == 1 && !/string|comment/.test(style)) {\n        var delimiter_index = \"[({\".indexOf(current);\n        if (delimiter_index != -1) pushBracketScope(stream, state, \"])}\".slice(delimiter_index, delimiter_index + 1));\n        delimiter_index = \"])}\".indexOf(current);\n\n        if (delimiter_index != -1) {\n          if (top(state).type == current) state.indent = state.scopes.pop().offset - hangingIndent;else return ERRORCLASS;\n        }\n      }\n\n      if (state.dedent > 0 && stream.eol() && top(state).type == \"py\") {\n        if (state.scopes.length > 1) state.scopes.pop();\n        state.dedent -= 1;\n      }\n\n      return style;\n    }\n\n    var external = {\n      startState: function startState(basecolumn) {\n        return {\n          tokenize: tokenBase,\n          scopes: [{\n            offset: basecolumn || 0,\n            type: \"py\",\n            align: null\n          }],\n          indent: basecolumn || 0,\n          lastToken: null,\n          lambda: false,\n          dedent: 0\n        };\n      },\n      token: function token(stream, state) {\n        var addErr = state.errorToken;\n        if (addErr) state.errorToken = false;\n        var style = tokenLexer(stream, state);\n        if (style && style != \"comment\") state.lastToken = style == \"keyword\" || style == \"punctuation\" ? stream.current() : style;\n        if (style == \"punctuation\") style = null;\n        if (stream.eol() && state.lambda) state.lambda = false;\n        return addErr ? style + \" \" + ERRORCLASS : style;\n      },\n      indent: function indent(state, textAfter) {\n        if (state.tokenize != tokenBase) return state.tokenize.isString ? CodeMirror.Pass : 0;\n        var scope = top(state),\n            closing = scope.type == textAfter.charAt(0);\n        if (scope.align != null) return scope.align - (closing ? 1 : 0);else return scope.offset - (closing ? hangingIndent : 0);\n      },\n      electricInput: /^\\s*[\\}\\]\\)]$/,\n      closeBrackets: {\n        triples: \"'\\\"\"\n      },\n      lineComment: \"#\",\n      fold: \"indent\"\n    };\n    return external;\n  });\n  CodeMirror.defineMIME(\"text/x-python\", \"python\");\n\n  var words = function words(str) {\n    return str.split(\" \");\n  };\n\n  CodeMirror.defineMIME(\"text/x-cython\", {\n    name: \"python\",\n    extra_keywords: words(\"by cdef cimport cpdef ctypedef enum except \" + \"extern gil include nogil property public \" + \"readonly struct union DEF IF ELIF ELSE\")\n  });\n});","// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: https://codemirror.net/LICENSE\n\n/*\n * Author: Constantin Jucovschi (c.jucovschi@jacobs-university.de)\n * Licence: MIT\n */\n(function (mod) {\n  if (typeof exports == \"object\" && typeof module == \"object\") // CommonJS\n    mod(require(\"../../lib/codemirror\"));else if (typeof define == \"function\" && define.amd) // AMD\n    define([\"../../lib/codemirror\"], mod);else // Plain browser env\n    mod(CodeMirror);\n})(function (CodeMirror) {\n  \"use strict\";\n\n  CodeMirror.defineMode(\"stex\", function (_config, parserConfig) {\n    \"use strict\";\n\n    function pushCommand(state, command) {\n      state.cmdState.push(command);\n    }\n\n    function peekCommand(state) {\n      if (state.cmdState.length > 0) {\n        return state.cmdState[state.cmdState.length - 1];\n      } else {\n        return null;\n      }\n    }\n\n    function popCommand(state) {\n      var plug = state.cmdState.pop();\n\n      if (plug) {\n        plug.closeBracket();\n      }\n    } // returns the non-default plugin closest to the end of the list\n\n\n    function getMostPowerful(state) {\n      var context = state.cmdState;\n\n      for (var i = context.length - 1; i >= 0; i--) {\n        var plug = context[i];\n\n        if (plug.name == \"DEFAULT\") {\n          continue;\n        }\n\n        return plug;\n      }\n\n      return {\n        styleIdentifier: function styleIdentifier() {\n          return null;\n        }\n      };\n    }\n\n    function addPluginPattern(pluginName, cmdStyle, styles) {\n      return function () {\n        this.name = pluginName;\n        this.bracketNo = 0;\n        this.style = cmdStyle;\n        this.styles = styles;\n        this.argument = null; // \\begin and \\end have arguments that follow. These are stored in the plugin\n\n        this.styleIdentifier = function () {\n          return this.styles[this.bracketNo - 1] || null;\n        };\n\n        this.openBracket = function () {\n          this.bracketNo++;\n          return \"bracket\";\n        };\n\n        this.closeBracket = function () {};\n      };\n    }\n\n    var plugins = {};\n    plugins[\"importmodule\"] = addPluginPattern(\"importmodule\", \"tag\", [\"string\", \"builtin\"]);\n    plugins[\"documentclass\"] = addPluginPattern(\"documentclass\", \"tag\", [\"\", \"atom\"]);\n    plugins[\"usepackage\"] = addPluginPattern(\"usepackage\", \"tag\", [\"atom\"]);\n    plugins[\"begin\"] = addPluginPattern(\"begin\", \"tag\", [\"atom\"]);\n    plugins[\"end\"] = addPluginPattern(\"end\", \"tag\", [\"atom\"]);\n    plugins[\"label\"] = addPluginPattern(\"label\", \"tag\", [\"atom\"]);\n    plugins[\"ref\"] = addPluginPattern(\"ref\", \"tag\", [\"atom\"]);\n    plugins[\"eqref\"] = addPluginPattern(\"eqref\", \"tag\", [\"atom\"]);\n    plugins[\"cite\"] = addPluginPattern(\"cite\", \"tag\", [\"atom\"]);\n    plugins[\"bibitem\"] = addPluginPattern(\"bibitem\", \"tag\", [\"atom\"]);\n    plugins[\"Bibitem\"] = addPluginPattern(\"Bibitem\", \"tag\", [\"atom\"]);\n    plugins[\"RBibitem\"] = addPluginPattern(\"RBibitem\", \"tag\", [\"atom\"]);\n\n    plugins[\"DEFAULT\"] = function () {\n      this.name = \"DEFAULT\";\n      this.style = \"tag\";\n\n      this.styleIdentifier = this.openBracket = this.closeBracket = function () {};\n    };\n\n    function setState(state, f) {\n      state.f = f;\n    } // called when in a normal (no environment) context\n\n\n    function normal(source, state) {\n      var plug; // Do we look like '\\command' ?  If so, attempt to apply the plugin 'command'\n\n      if (source.match(/^\\\\[a-zA-Z@]+/)) {\n        var cmdName = source.current().slice(1);\n        plug = plugins[cmdName] || plugins[\"DEFAULT\"];\n        plug = new plug();\n        pushCommand(state, plug);\n        setState(state, beginParams);\n        return plug.style;\n      } // escape characters\n\n\n      if (source.match(/^\\\\[$&%#{}_]/)) {\n        return \"tag\";\n      } // white space control characters\n\n\n      if (source.match(/^\\\\[,;!\\/\\\\]/)) {\n        return \"tag\";\n      } // find if we're starting various math modes\n\n\n      if (source.match(\"\\\\[\")) {\n        setState(state, function (source, state) {\n          return inMathMode(source, state, \"\\\\]\");\n        });\n        return \"keyword\";\n      }\n\n      if (source.match(\"\\\\(\")) {\n        setState(state, function (source, state) {\n          return inMathMode(source, state, \"\\\\)\");\n        });\n        return \"keyword\";\n      }\n\n      if (source.match(\"$$\")) {\n        setState(state, function (source, state) {\n          return inMathMode(source, state, \"$$\");\n        });\n        return \"keyword\";\n      }\n\n      if (source.match(\"$\")) {\n        setState(state, function (source, state) {\n          return inMathMode(source, state, \"$\");\n        });\n        return \"keyword\";\n      }\n\n      var ch = source.next();\n\n      if (ch == \"%\") {\n        source.skipToEnd();\n        return \"comment\";\n      } else if (ch == '}' || ch == ']') {\n        plug = peekCommand(state);\n\n        if (plug) {\n          plug.closeBracket(ch);\n          setState(state, beginParams);\n        } else {\n          return \"error\";\n        }\n\n        return \"bracket\";\n      } else if (ch == '{' || ch == '[') {\n        plug = plugins[\"DEFAULT\"];\n        plug = new plug();\n        pushCommand(state, plug);\n        return \"bracket\";\n      } else if (/\\d/.test(ch)) {\n        source.eatWhile(/[\\w.%]/);\n        return \"atom\";\n      } else {\n        source.eatWhile(/[\\w\\-_]/);\n        plug = getMostPowerful(state);\n\n        if (plug.name == 'begin') {\n          plug.argument = source.current();\n        }\n\n        return plug.styleIdentifier();\n      }\n    }\n\n    function inMathMode(source, state, endModeSeq) {\n      if (source.eatSpace()) {\n        return null;\n      }\n\n      if (endModeSeq && source.match(endModeSeq)) {\n        setState(state, normal);\n        return \"keyword\";\n      }\n\n      if (source.match(/^\\\\[a-zA-Z@]+/)) {\n        return \"tag\";\n      }\n\n      if (source.match(/^[a-zA-Z]+/)) {\n        return \"variable-2\";\n      } // escape characters\n\n\n      if (source.match(/^\\\\[$&%#{}_]/)) {\n        return \"tag\";\n      } // white space control characters\n\n\n      if (source.match(/^\\\\[,;!\\/]/)) {\n        return \"tag\";\n      } // special math-mode characters\n\n\n      if (source.match(/^[\\^_&]/)) {\n        return \"tag\";\n      } // non-special characters\n\n\n      if (source.match(/^[+\\-<>|=,\\/@!*:;'\"`~#?]/)) {\n        return null;\n      }\n\n      if (source.match(/^(\\d+\\.\\d*|\\d*\\.\\d+|\\d+)/)) {\n        return \"number\";\n      }\n\n      var ch = source.next();\n\n      if (ch == \"{\" || ch == \"}\" || ch == \"[\" || ch == \"]\" || ch == \"(\" || ch == \")\") {\n        return \"bracket\";\n      }\n\n      if (ch == \"%\") {\n        source.skipToEnd();\n        return \"comment\";\n      }\n\n      return \"error\";\n    }\n\n    function beginParams(source, state) {\n      var ch = source.peek(),\n          lastPlug;\n\n      if (ch == '{' || ch == '[') {\n        lastPlug = peekCommand(state);\n        lastPlug.openBracket(ch);\n        source.eat(ch);\n        setState(state, normal);\n        return \"bracket\";\n      }\n\n      if (/[ \\t\\r]/.test(ch)) {\n        source.eat(ch);\n        return null;\n      }\n\n      setState(state, normal);\n      popCommand(state);\n      return normal(source, state);\n    }\n\n    return {\n      startState: function startState() {\n        var f = parserConfig.inMathMode ? function (source, state) {\n          return inMathMode(source, state);\n        } : normal;\n        return {\n          cmdState: [],\n          f: f\n        };\n      },\n      copyState: function copyState(s) {\n        return {\n          cmdState: s.cmdState.slice(),\n          f: s.f\n        };\n      },\n      token: function token(stream, state) {\n        return state.f(stream, state);\n      },\n      blankLine: function blankLine(state) {\n        state.f = normal;\n        state.cmdState.length = 0;\n      },\n      lineComment: \"%\"\n    };\n  });\n  CodeMirror.defineMIME(\"text/x-stex\", \"stex\");\n  CodeMirror.defineMIME(\"text/x-latex\", \"stex\");\n});","// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: https://codemirror.net/LICENSE\n(function (mod) {\n  if (typeof exports == \"object\" && typeof module == \"object\") // CommonJS\n    mod(require(\"../../lib/codemirror\"), require(\"../python/python\"), require(\"../stex/stex\"), require(\"../../addon/mode/overlay\"));else if (typeof define == \"function\" && define.amd) // AMD\n    define([\"../../lib/codemirror\", \"../python/python\", \"../stex/stex\", \"../../addon/mode/overlay\"], mod);else // Plain browser env\n    mod(CodeMirror);\n})(function (CodeMirror) {\n  \"use strict\";\n\n  CodeMirror.defineMode('rst', function (config, options) {\n    var rx_strong = /^\\*\\*[^\\*\\s](?:[^\\*]*[^\\*\\s])?\\*\\*/;\n    var rx_emphasis = /^\\*[^\\*\\s](?:[^\\*]*[^\\*\\s])?\\*/;\n    var rx_literal = /^``[^`\\s](?:[^`]*[^`\\s])``/;\n    var rx_number = /^(?:[\\d]+(?:[\\.,]\\d+)*)/;\n    var rx_positive = /^(?:\\s\\+[\\d]+(?:[\\.,]\\d+)*)/;\n    var rx_negative = /^(?:\\s\\-[\\d]+(?:[\\.,]\\d+)*)/;\n    var rx_uri_protocol = \"[Hh][Tt][Tt][Pp][Ss]?://\";\n    var rx_uri_domain = \"(?:[\\\\d\\\\w.-]+)\\\\.(?:\\\\w{2,6})\";\n    var rx_uri_path = \"(?:/[\\\\d\\\\w\\\\#\\\\%\\\\&\\\\-\\\\.\\\\,\\\\/\\\\:\\\\=\\\\?\\\\~]+)*\";\n    var rx_uri = new RegExp(\"^\" + rx_uri_protocol + rx_uri_domain + rx_uri_path);\n    var overlay = {\n      token: function token(stream) {\n        if (stream.match(rx_strong) && stream.match(/\\W+|$/, false)) return 'strong';\n        if (stream.match(rx_emphasis) && stream.match(/\\W+|$/, false)) return 'em';\n        if (stream.match(rx_literal) && stream.match(/\\W+|$/, false)) return 'string-2';\n        if (stream.match(rx_number)) return 'number';\n        if (stream.match(rx_positive)) return 'positive';\n        if (stream.match(rx_negative)) return 'negative';\n        if (stream.match(rx_uri)) return 'link';\n\n        while (stream.next() != null) {\n          if (stream.match(rx_strong, false)) break;\n          if (stream.match(rx_emphasis, false)) break;\n          if (stream.match(rx_literal, false)) break;\n          if (stream.match(rx_number, false)) break;\n          if (stream.match(rx_positive, false)) break;\n          if (stream.match(rx_negative, false)) break;\n          if (stream.match(rx_uri, false)) break;\n        }\n\n        return null;\n      }\n    };\n    var mode = CodeMirror.getMode(config, options.backdrop || 'rst-base');\n    return CodeMirror.overlayMode(mode, overlay, true); // combine\n  }, 'python', 'stex'); ///////////////////////////////////////////////////////////////////////////////\n  ///////////////////////////////////////////////////////////////////////////////\n\n  CodeMirror.defineMode('rst-base', function (config) {\n    ///////////////////////////////////////////////////////////////////////////\n    ///////////////////////////////////////////////////////////////////////////\n    function format(string) {\n      var args = Array.prototype.slice.call(arguments, 1);\n      return string.replace(/{(\\d+)}/g, function (match, n) {\n        return typeof args[n] != 'undefined' ? args[n] : match;\n      });\n    } ///////////////////////////////////////////////////////////////////////////\n    ///////////////////////////////////////////////////////////////////////////\n\n\n    var mode_python = CodeMirror.getMode(config, 'python');\n    var mode_stex = CodeMirror.getMode(config, 'stex'); ///////////////////////////////////////////////////////////////////////////\n    ///////////////////////////////////////////////////////////////////////////\n\n    var SEPA = \"\\\\s+\";\n    var TAIL = \"(?:\\\\s*|\\\\W|$)\",\n        rx_TAIL = new RegExp(format('^{0}', TAIL));\n    var NAME = \"(?:[^\\\\W\\\\d_](?:[\\\\w!\\\"#$%&'()\\\\*\\\\+,\\\\-\\\\.\\/:;<=>\\\\?]*[^\\\\W_])?)\",\n        rx_NAME = new RegExp(format('^{0}', NAME));\n    var NAME_WWS = \"(?:[^\\\\W\\\\d_](?:[\\\\w\\\\s!\\\"#$%&'()\\\\*\\\\+,\\\\-\\\\.\\/:;<=>\\\\?]*[^\\\\W_])?)\";\n    var REF_NAME = format('(?:{0}|`{1}`)', NAME, NAME_WWS);\n    var TEXT1 = \"(?:[^\\\\s\\\\|](?:[^\\\\|]*[^\\\\s\\\\|])?)\";\n    var TEXT2 = \"(?:[^\\\\`]+)\",\n        rx_TEXT2 = new RegExp(format('^{0}', TEXT2));\n    var rx_section = new RegExp(\"^([!'#$%&\\\"()*+,-./:;<=>?@\\\\[\\\\\\\\\\\\]^_`{|}~])\\\\1{3,}\\\\s*$\");\n    var rx_explicit = new RegExp(format('^\\\\.\\\\.{0}', SEPA));\n    var rx_link = new RegExp(format('^_{0}:{1}|^__:{1}', REF_NAME, TAIL));\n    var rx_directive = new RegExp(format('^{0}::{1}', REF_NAME, TAIL));\n    var rx_substitution = new RegExp(format('^\\\\|{0}\\\\|{1}{2}::{3}', TEXT1, SEPA, REF_NAME, TAIL));\n    var rx_footnote = new RegExp(format('^\\\\[(?:\\\\d+|#{0}?|\\\\*)]{1}', REF_NAME, TAIL));\n    var rx_citation = new RegExp(format('^\\\\[{0}\\\\]{1}', REF_NAME, TAIL));\n    var rx_substitution_ref = new RegExp(format('^\\\\|{0}\\\\|', TEXT1));\n    var rx_footnote_ref = new RegExp(format('^\\\\[(?:\\\\d+|#{0}?|\\\\*)]_', REF_NAME));\n    var rx_citation_ref = new RegExp(format('^\\\\[{0}\\\\]_', REF_NAME));\n    var rx_link_ref1 = new RegExp(format('^{0}__?', REF_NAME));\n    var rx_link_ref2 = new RegExp(format('^`{0}`_', TEXT2));\n    var rx_role_pre = new RegExp(format('^:{0}:`{1}`{2}', NAME, TEXT2, TAIL));\n    var rx_role_suf = new RegExp(format('^`{1}`:{0}:{2}', NAME, TEXT2, TAIL));\n    var rx_role = new RegExp(format('^:{0}:{1}', NAME, TAIL));\n    var rx_directive_name = new RegExp(format('^{0}', REF_NAME));\n    var rx_directive_tail = new RegExp(format('^::{0}', TAIL));\n    var rx_substitution_text = new RegExp(format('^\\\\|{0}\\\\|', TEXT1));\n    var rx_substitution_sepa = new RegExp(format('^{0}', SEPA));\n    var rx_substitution_name = new RegExp(format('^{0}', REF_NAME));\n    var rx_substitution_tail = new RegExp(format('^::{0}', TAIL));\n    var rx_link_head = new RegExp(\"^_\");\n    var rx_link_name = new RegExp(format('^{0}|_', REF_NAME));\n    var rx_link_tail = new RegExp(format('^:{0}', TAIL));\n    var rx_verbatim = new RegExp('^::\\\\s*$');\n    var rx_examples = new RegExp('^\\\\s+(?:>>>|In \\\\[\\\\d+\\\\]:)\\\\s'); ///////////////////////////////////////////////////////////////////////////\n    ///////////////////////////////////////////////////////////////////////////\n\n    function to_normal(stream, state) {\n      var token = null;\n\n      if (stream.sol() && stream.match(rx_examples, false)) {\n        change(state, to_mode, {\n          mode: mode_python,\n          local: CodeMirror.startState(mode_python)\n        });\n      } else if (stream.sol() && stream.match(rx_explicit)) {\n        change(state, to_explicit);\n        token = 'meta';\n      } else if (stream.sol() && stream.match(rx_section)) {\n        change(state, to_normal);\n        token = 'header';\n      } else if (phase(state) == rx_role_pre || stream.match(rx_role_pre, false)) {\n        switch (stage(state)) {\n          case 0:\n            change(state, to_normal, context(rx_role_pre, 1));\n            stream.match(/^:/);\n            token = 'meta';\n            break;\n\n          case 1:\n            change(state, to_normal, context(rx_role_pre, 2));\n            stream.match(rx_NAME);\n            token = 'keyword';\n\n            if (stream.current().match(/^(?:math|latex)/)) {\n              state.tmp_stex = true;\n            }\n\n            break;\n\n          case 2:\n            change(state, to_normal, context(rx_role_pre, 3));\n            stream.match(/^:`/);\n            token = 'meta';\n            break;\n\n          case 3:\n            if (state.tmp_stex) {\n              state.tmp_stex = undefined;\n              state.tmp = {\n                mode: mode_stex,\n                local: CodeMirror.startState(mode_stex)\n              };\n            }\n\n            if (state.tmp) {\n              if (stream.peek() == '`') {\n                change(state, to_normal, context(rx_role_pre, 4));\n                state.tmp = undefined;\n                break;\n              }\n\n              token = state.tmp.mode.token(stream, state.tmp.local);\n              break;\n            }\n\n            change(state, to_normal, context(rx_role_pre, 4));\n            stream.match(rx_TEXT2);\n            token = 'string';\n            break;\n\n          case 4:\n            change(state, to_normal, context(rx_role_pre, 5));\n            stream.match(/^`/);\n            token = 'meta';\n            break;\n\n          case 5:\n            change(state, to_normal, context(rx_role_pre, 6));\n            stream.match(rx_TAIL);\n            break;\n\n          default:\n            change(state, to_normal);\n        }\n      } else if (phase(state) == rx_role_suf || stream.match(rx_role_suf, false)) {\n        switch (stage(state)) {\n          case 0:\n            change(state, to_normal, context(rx_role_suf, 1));\n            stream.match(/^`/);\n            token = 'meta';\n            break;\n\n          case 1:\n            change(state, to_normal, context(rx_role_suf, 2));\n            stream.match(rx_TEXT2);\n            token = 'string';\n            break;\n\n          case 2:\n            change(state, to_normal, context(rx_role_suf, 3));\n            stream.match(/^`:/);\n            token = 'meta';\n            break;\n\n          case 3:\n            change(state, to_normal, context(rx_role_suf, 4));\n            stream.match(rx_NAME);\n            token = 'keyword';\n            break;\n\n          case 4:\n            change(state, to_normal, context(rx_role_suf, 5));\n            stream.match(/^:/);\n            token = 'meta';\n            break;\n\n          case 5:\n            change(state, to_normal, context(rx_role_suf, 6));\n            stream.match(rx_TAIL);\n            break;\n\n          default:\n            change(state, to_normal);\n        }\n      } else if (phase(state) == rx_role || stream.match(rx_role, false)) {\n        switch (stage(state)) {\n          case 0:\n            change(state, to_normal, context(rx_role, 1));\n            stream.match(/^:/);\n            token = 'meta';\n            break;\n\n          case 1:\n            change(state, to_normal, context(rx_role, 2));\n            stream.match(rx_NAME);\n            token = 'keyword';\n            break;\n\n          case 2:\n            change(state, to_normal, context(rx_role, 3));\n            stream.match(/^:/);\n            token = 'meta';\n            break;\n\n          case 3:\n            change(state, to_normal, context(rx_role, 4));\n            stream.match(rx_TAIL);\n            break;\n\n          default:\n            change(state, to_normal);\n        }\n      } else if (phase(state) == rx_substitution_ref || stream.match(rx_substitution_ref, false)) {\n        switch (stage(state)) {\n          case 0:\n            change(state, to_normal, context(rx_substitution_ref, 1));\n            stream.match(rx_substitution_text);\n            token = 'variable-2';\n            break;\n\n          case 1:\n            change(state, to_normal, context(rx_substitution_ref, 2));\n            if (stream.match(/^_?_?/)) token = 'link';\n            break;\n\n          default:\n            change(state, to_normal);\n        }\n      } else if (stream.match(rx_footnote_ref)) {\n        change(state, to_normal);\n        token = 'quote';\n      } else if (stream.match(rx_citation_ref)) {\n        change(state, to_normal);\n        token = 'quote';\n      } else if (stream.match(rx_link_ref1)) {\n        change(state, to_normal);\n\n        if (!stream.peek() || stream.peek().match(/^\\W$/)) {\n          token = 'link';\n        }\n      } else if (phase(state) == rx_link_ref2 || stream.match(rx_link_ref2, false)) {\n        switch (stage(state)) {\n          case 0:\n            if (!stream.peek() || stream.peek().match(/^\\W$/)) {\n              change(state, to_normal, context(rx_link_ref2, 1));\n            } else {\n              stream.match(rx_link_ref2);\n            }\n\n            break;\n\n          case 1:\n            change(state, to_normal, context(rx_link_ref2, 2));\n            stream.match(/^`/);\n            token = 'link';\n            break;\n\n          case 2:\n            change(state, to_normal, context(rx_link_ref2, 3));\n            stream.match(rx_TEXT2);\n            break;\n\n          case 3:\n            change(state, to_normal, context(rx_link_ref2, 4));\n            stream.match(/^`_/);\n            token = 'link';\n            break;\n\n          default:\n            change(state, to_normal);\n        }\n      } else if (stream.match(rx_verbatim)) {\n        change(state, to_verbatim);\n      } else {\n        if (stream.next()) change(state, to_normal);\n      }\n\n      return token;\n    } ///////////////////////////////////////////////////////////////////////////\n    ///////////////////////////////////////////////////////////////////////////\n\n\n    function to_explicit(stream, state) {\n      var token = null;\n\n      if (phase(state) == rx_substitution || stream.match(rx_substitution, false)) {\n        switch (stage(state)) {\n          case 0:\n            change(state, to_explicit, context(rx_substitution, 1));\n            stream.match(rx_substitution_text);\n            token = 'variable-2';\n            break;\n\n          case 1:\n            change(state, to_explicit, context(rx_substitution, 2));\n            stream.match(rx_substitution_sepa);\n            break;\n\n          case 2:\n            change(state, to_explicit, context(rx_substitution, 3));\n            stream.match(rx_substitution_name);\n            token = 'keyword';\n            break;\n\n          case 3:\n            change(state, to_explicit, context(rx_substitution, 4));\n            stream.match(rx_substitution_tail);\n            token = 'meta';\n            break;\n\n          default:\n            change(state, to_normal);\n        }\n      } else if (phase(state) == rx_directive || stream.match(rx_directive, false)) {\n        switch (stage(state)) {\n          case 0:\n            change(state, to_explicit, context(rx_directive, 1));\n            stream.match(rx_directive_name);\n            token = 'keyword';\n            if (stream.current().match(/^(?:math|latex)/)) state.tmp_stex = true;else if (stream.current().match(/^python/)) state.tmp_py = true;\n            break;\n\n          case 1:\n            change(state, to_explicit, context(rx_directive, 2));\n            stream.match(rx_directive_tail);\n            token = 'meta';\n\n            if (stream.match(/^latex\\s*$/) || state.tmp_stex) {\n              state.tmp_stex = undefined;\n              change(state, to_mode, {\n                mode: mode_stex,\n                local: CodeMirror.startState(mode_stex)\n              });\n            }\n\n            break;\n\n          case 2:\n            change(state, to_explicit, context(rx_directive, 3));\n\n            if (stream.match(/^python\\s*$/) || state.tmp_py) {\n              state.tmp_py = undefined;\n              change(state, to_mode, {\n                mode: mode_python,\n                local: CodeMirror.startState(mode_python)\n              });\n            }\n\n            break;\n\n          default:\n            change(state, to_normal);\n        }\n      } else if (phase(state) == rx_link || stream.match(rx_link, false)) {\n        switch (stage(state)) {\n          case 0:\n            change(state, to_explicit, context(rx_link, 1));\n            stream.match(rx_link_head);\n            stream.match(rx_link_name);\n            token = 'link';\n            break;\n\n          case 1:\n            change(state, to_explicit, context(rx_link, 2));\n            stream.match(rx_link_tail);\n            token = 'meta';\n            break;\n\n          default:\n            change(state, to_normal);\n        }\n      } else if (stream.match(rx_footnote)) {\n        change(state, to_normal);\n        token = 'quote';\n      } else if (stream.match(rx_citation)) {\n        change(state, to_normal);\n        token = 'quote';\n      } else {\n        stream.eatSpace();\n\n        if (stream.eol()) {\n          change(state, to_normal);\n        } else {\n          stream.skipToEnd();\n          change(state, to_comment);\n          token = 'comment';\n        }\n      }\n\n      return token;\n    } ///////////////////////////////////////////////////////////////////////////\n    ///////////////////////////////////////////////////////////////////////////\n\n\n    function to_comment(stream, state) {\n      return as_block(stream, state, 'comment');\n    }\n\n    function to_verbatim(stream, state) {\n      return as_block(stream, state, 'meta');\n    }\n\n    function as_block(stream, state, token) {\n      if (stream.eol() || stream.eatSpace()) {\n        stream.skipToEnd();\n        return token;\n      } else {\n        change(state, to_normal);\n        return null;\n      }\n    } ///////////////////////////////////////////////////////////////////////////\n    ///////////////////////////////////////////////////////////////////////////\n\n\n    function to_mode(stream, state) {\n      if (state.ctx.mode && state.ctx.local) {\n        if (stream.sol()) {\n          if (!stream.eatSpace()) change(state, to_normal);\n          return null;\n        }\n\n        return state.ctx.mode.token(stream, state.ctx.local);\n      }\n\n      change(state, to_normal);\n      return null;\n    } ///////////////////////////////////////////////////////////////////////////\n    ///////////////////////////////////////////////////////////////////////////\n\n\n    function context(phase, stage, mode, local) {\n      return {\n        phase: phase,\n        stage: stage,\n        mode: mode,\n        local: local\n      };\n    }\n\n    function change(state, tok, ctx) {\n      state.tok = tok;\n      state.ctx = ctx || {};\n    }\n\n    function stage(state) {\n      return state.ctx.stage || 0;\n    }\n\n    function phase(state) {\n      return state.ctx.phase;\n    } ///////////////////////////////////////////////////////////////////////////\n    ///////////////////////////////////////////////////////////////////////////\n\n\n    return {\n      startState: function startState() {\n        return {\n          tok: to_normal,\n          ctx: context(undefined, 0)\n        };\n      },\n      copyState: function copyState(state) {\n        var ctx = state.ctx,\n            tmp = state.tmp;\n        if (ctx.local) ctx = {\n          mode: ctx.mode,\n          local: CodeMirror.copyState(ctx.mode, ctx.local)\n        };\n        if (tmp) tmp = {\n          mode: tmp.mode,\n          local: CodeMirror.copyState(tmp.mode, tmp.local)\n        };\n        return {\n          tok: state.tok,\n          ctx: ctx,\n          tmp: tmp\n        };\n      },\n      innerMode: function innerMode(state) {\n        return state.tmp ? {\n          state: state.tmp.local,\n          mode: state.tmp.mode\n        } : state.ctx.mode ? {\n          state: state.ctx.local,\n          mode: state.ctx.mode\n        } : null;\n      },\n      token: function token(stream, state) {\n        return state.tok(stream, state);\n      }\n    };\n  }, 'python', 'stex'); ///////////////////////////////////////////////////////////////////////////////\n  ///////////////////////////////////////////////////////////////////////////////\n\n  CodeMirror.defineMIME('text/x-rst', 'rst'); ///////////////////////////////////////////////////////////////////////////////\n  ///////////////////////////////////////////////////////////////////////////////\n});","// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: https://codemirror.net/LICENSE\n// Utility function that allows modes to be combined. The mode given\n// as the base argument takes care of most of the normal mode\n// functionality, but a second (typically simple) mode is used, which\n// can override the style of text. Both modes get to parse all of the\n// text, but when both assign a non-null style to a piece of code, the\n// overlay wins, unless the combine argument was true and not overridden,\n// or state.overlay.combineTokens was true, in which case the styles are\n// combined.\n(function (mod) {\n  if (typeof exports == \"object\" && typeof module == \"object\") // CommonJS\n    mod(require(\"../../lib/codemirror\"));else if (typeof define == \"function\" && define.amd) // AMD\n    define([\"../../lib/codemirror\"], mod);else // Plain browser env\n    mod(CodeMirror);\n})(function (CodeMirror) {\n  \"use strict\";\n\n  CodeMirror.overlayMode = function (base, overlay, combine) {\n    return {\n      startState: function startState() {\n        return {\n          base: CodeMirror.startState(base),\n          overlay: CodeMirror.startState(overlay),\n          basePos: 0,\n          baseCur: null,\n          overlayPos: 0,\n          overlayCur: null,\n          streamSeen: null\n        };\n      },\n      copyState: function copyState(state) {\n        return {\n          base: CodeMirror.copyState(base, state.base),\n          overlay: CodeMirror.copyState(overlay, state.overlay),\n          basePos: state.basePos,\n          baseCur: null,\n          overlayPos: state.overlayPos,\n          overlayCur: null\n        };\n      },\n      token: function token(stream, state) {\n        if (stream != state.streamSeen || Math.min(state.basePos, state.overlayPos) < stream.start) {\n          state.streamSeen = stream;\n          state.basePos = state.overlayPos = stream.start;\n        }\n\n        if (stream.start == state.basePos) {\n          state.baseCur = base.token(stream, state.base);\n          state.basePos = stream.pos;\n        }\n\n        if (stream.start == state.overlayPos) {\n          stream.pos = stream.start;\n          state.overlayCur = overlay.token(stream, state.overlay);\n          state.overlayPos = stream.pos;\n        }\n\n        stream.pos = Math.min(state.basePos, state.overlayPos); // state.overlay.combineTokens always takes precedence over combine,\n        // unless set to null\n\n        if (state.overlayCur == null) return state.baseCur;else if (state.baseCur != null && state.overlay.combineTokens || combine && state.overlay.combineTokens == null) return state.baseCur + \" \" + state.overlayCur;else return state.overlayCur;\n      },\n      indent: base.indent && function (state, textAfter, line) {\n        return base.indent(state.base, textAfter, line);\n      },\n      electricChars: base.electricChars,\n      innerMode: function innerMode(state) {\n        return {\n          state: state.base,\n          mode: base\n        };\n      },\n      blankLine: function blankLine(state) {\n        var baseToken, overlayToken;\n        if (base.blankLine) baseToken = base.blankLine(state.base);\n        if (overlay.blankLine) overlayToken = overlay.blankLine(state.overlay);\n        return overlayToken == null ? baseToken : combine && baseToken != null ? baseToken + \" \" + overlayToken : overlayToken;\n      }\n    };\n  };\n});"],"sourceRoot":""}